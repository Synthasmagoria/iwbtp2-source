// 2024-06-30 23:23:37
#event properties (no comments/etc. here are saved)
parent_index = -1;
sprite_index = sprTriggerMask;
uses_physics = false;

#event create
sh = shP2Stretch;
surf = -1;
distortion_factor_a = 0.0;
distortion_factor_b = 0.0;
time = 0;
traversal_time = 0.75;

movement_tween = -1;
phase = 0;
player_y = 0;
player_facing = 0;
player_vs = 0;
player_x = 0;

sound_inst = -1;

depth = -2;

#event destroy
if (audio_is_playing(sound_inst)) {
    audio_stop_sound(sound_inst);
}

#event step
var _player = instance_find(objPlayer, 0);
if (!instance_exists(_player)) {
    exit;
}

switch (phase) {
    case 0:
    if (_player.bbox_left < x && _player.bbox_right >= x) {
        player_y = floor(_player.y);
        player_facing = _player.xScale;
        player_vs = _player.vspeed;
        player_x = _player.x;
        _player.frozen = true;
        phase++;
        if (!audio_is_playing(sound_inst) || audio_sound_get_track_position(sound_inst) > audio_sound_length(sound_inst)) {
            sound_inst = audio_play_sound(sndP2Stretch, 0, false);
        }
        if (player_facing == 1)
            movement_tween = TweenFire(id, EaseLinear, 0, true, 0.0, traversal_time, "player_x", player_x, x - instance_center_to_bbox_left(_player) + 1);
        else
            movement_tween = TweenFire(id, EaseLinear, 0, true, 0.0, traversal_time, "player_x", player_x, x - instance_center_to_bbox_right(_player) - 1);
            
    }
    break;
    
    case 1:
    _player.x = player_x;
    _player.y = player_y;
    _player.xScale = player_facing;
    _player.vspeed = player_vs;
    if (!TweenExists(movement_tween)) {
        phase = 0;
        _player.frozen = false;
    }
    break;
}

#event other_room_end
instance_destroy();

#event draw draw nothing


#event draw_end
surf = scrP2WorldRequestBackbuffer();
time += (1/room_speed);
shader_set(sh);
shader_set_uniform_f(shader_get_uniform(sh, "resolution"), view_wview[0], view_hview[0]);
shader_set_uniform_f(shader_get_uniform(sh, "stretch"), bbox_left, bbox_right);
shader_set_uniform_f(shader_get_uniform(sh, "time"), time);
shader_set_uniform_f(shader_get_uniform(sh, "distortion_factor"), distortion_factor_a, distortion_factor_b);
draw_surface(surf, view_xview[0], view_yview[0]);
shader_reset();
