// 2024-05-26 19:24:43
#event properties (no comments/etc. here are saved)
parent_index = -1;
sprite_index = -1;
uses_physics = false;
persistent = true;

#event create
if (live_call()) return live_result;
surf_a = -1;
surf_b = -1;
scale = 1;
surf_w = view_wview[0] * scale;
surf_h = view_hview[0] * scale;
sh = shP2DitherSimple;
time = 0;

step_time = 0;
step_interval = 3;
depth = 3000000;

#event destroy
if (live_call()) return live_result;
if (surface_exists(surf_a))
    surface_free(surf_a);
    
if (surface_exists(surf_b))
    surface_free(surf_b);

#event other_room_start
if (!srcP2WorldRoomIsOOB(room)) {
    instance_destroy();
}

#event other_room_end
if (live_call()) return live_result;
instance_destroy();

#event draw
if (live_call()) return live_result;
texture_set_interpolation(false);

if (!surface_exists(surf_a)) {
    surf_a = surface_create(surf_w, surf_h);
    surface_set_target(surf_a);
    draw_clear_alpha(c_black, 0.0);
    surface_reset_target();
}

if (!surface_exists(surf_b)) {
    surf_b = surface_create(surf_w, surf_h);
    surface_set_target(surf_b);
    draw_clear_alpha(c_black, 0.0);
    surface_reset_target();
}

if ((step_time + 1) % step_interval == 0) {
    step_time = 0;
    time += (1/room_speed);
    
    surface_set_target(surf_b);
    shader_set(sh);
    shader_set_uniform_f(shader_get_uniform(sh, "time"), time);
    draw_surface(surf_a, 0, 0);
    shader_reset();
    surface_reset_target();
    
    var _temp = surf_a;
    surf_a = surf_b;
    surf_b = _temp;
    
    surface_set_target(surf_b);
    draw_clear_alpha(c_black, 0.0);
    surface_reset_target();
} else {
    step_time++;
}

draw_surface_ext(surf_a, view_xview[0], view_yview[0], 1 / scale, 1 / scale, image_angle, image_blend, image_alpha);

// TODO: Depending on how smoothing is done in the game this might need to change
texture_set_interpolation(global.smoothingMode);