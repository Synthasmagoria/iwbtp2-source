// 2024-06-20 11:10:39
#event properties (no comments/etc. here are saved)
parent_index = -1;
persistent = true;
uses_physics = false;

#event create
enum P2_HUD_SCALE {MINIMIZED, NORMAL, MAXIMIZED, __MAX}
hud_scale_index = P2_HUD_SCALE.NORMAL;
hud_scale_duration = 0.5;
hud_scale_disabled = false;

map_fade_duration = 0.5;
map_widths = array(36, 160, 360);
map_heights = array(36, 160, 160);
map_transparency_padding_x = 180;
map_transparency_padding_y = 120;

inventory_slot_sizes = array(24, 48, 48);

map_instance = instance_create(0, 0, oP2Map);
inventory_instance = instance_create(0, 0, oP2Inventory);
objectives_instance = instance_create(0, 0, oP2Objectives);

with (map_instance) {
    event_user(0);
}

// internal
_in_map_area = false;

#event destroy
instance_destroy(inventory_instance);
instance_destroy(objectives_instance);
instance_destroy(map_instance);

#event step|alpha change for when map/inv are on top of each other

inventory_instance.visible = visible;
map_instance.visible = visible;
objectives_instance.visible = visible;

if (keyboard_check_pressed(ord("X")) && !hud_scale_disabled) {
    scrP2HudSetScale((hud_scale_index + 1) % P2_HUD_SCALE.__MAX);
}

switch (hud_scale_index) {
    case P2_HUD_SCALE.NORMAL:
    case P2_HUD_SCALE.MAXIMIZED:
    {
    var
    _player = instance_find(objPlayer, 0),
    _in_map_area_current = false;
    
    if (instance_exists(_player)) {
        var _map_area = scrSynthMapGetScreenArea();
        _in_map_area_current = point_in_rectangle(
            _player.x - view_xview[0],
            _player.y - view_yview[0],
            _map_area[0] - map_transparency_padding_x,
            _map_area[1],
            _map_area[2],
            _map_area[3] + map_transparency_padding_y);
    }
    
    if (_in_map_area_current ^ _in_map_area) {
        TweenFireTo(map_instance, EaseOutQuad, 0, true, 0, map_fade_duration, "image_alpha", 1.0 - _in_map_area_current * 0.75);
    }
    
    _in_map_area = _in_map_area_current;
    }
    break;
}


#event other_room_start