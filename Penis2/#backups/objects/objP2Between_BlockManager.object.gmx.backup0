// 2024-04-29 19:36:03
#event properties (no comments/etc. here are saved)
parent_index = -1;
uses_physics = false;

#event create
time = 0;
interval = 4;
blocks = ds_list_create();
miniblocks = ds_list_create();
toggle_chance = 0.5;
paralax = 0.5;
miniparalax = 0.75;

block_float_value = -1;
TweenFire(id, EaseInSine, TWEEN_MODE_PATROL, true, 0, 1, "block_float_value", -1, 1);

#event destroy
ds_list_destroy(blocks);
ds_list_destroy(miniblocks);

#event other_room_end
instance_destroy();

#event other_room_start
with (objP2Between_Block) {
    if (random(1) < other.toggle_chance) {
        sprite_index = choose(sprP2Between_Block01, sprP2Between_Block02, sprP2Between_Block03);
        image_index = irandom(sprite_get_number(sprite_index) - 1);
    }
    ds_list_add(other.blocks, id);
}

with (objP2Between_MiniBlock) {
    if (random(1) < other.toggle_chance) {
        sprite_index = choose(sprP2Between_MiniBlock01, sprP2Between_MiniBlock02, sprP2Between_MiniBlock03);
        image_index = irandom(sprite_get_number(sprite_index) - 1);
    }
    ds_list_add(other.miniblocks, id);
}

#event step
var _block;

time++;
if ((time % interval) == 0) {
    if (random(1) < other.toggle_chance) {
        _block = blocks[|irandom(ds_list_size(blocks) - 1)];
        if (_block.sprite_index == sprP2Between_Block)
            _block.sprite_index = choose(sprP2Between_Block01, sprP2Between_Block02, sprP2Between_Block03);
        else
            _block.sprite_index = sprP2Between_Block;
        _block.image_index = irandom(sprite_get_number(_block.sprite_index) - 1);
    }
    if (random(1) < other.toggle_chance) {
        _block = miniblocks[|irandom(ds_list_size(miniblocks) - 1)];
        if (_block.sprite_index == sprP2Between_MiniBlock)
            _block.sprite_index = choose(sprP2Between_MiniBlock01, sprP2Between_MiniBlock02, sprP2Between_MiniBlock03);
        else
            _block.sprite_index = sprP2Between_MiniBlock;
        _block.image_index = irandom(sprite_get_number(_block.sprite_index) - 1);
    }
}

for (var i = 0, n = ds_list_size(blocks); i < n; i++) {
    _block = blocks[|i];
    _block.y = _block.ystart + block_float_value * 8;
    _block.x = _block.xstart + view_xview[0] * paralax;
}

for (var i = 0, n = ds_list_size(miniblocks); i < n; i++) {
    _block = miniblocks[|i];
    _block.y = _block.ystart + block_float_value * 4;
    _block.x = _block.xstart + view_xview[0] * miniparalax;
}