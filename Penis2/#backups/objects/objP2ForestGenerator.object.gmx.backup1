// 2024-07-02 14:46:09
#event properties (no comments/etc. here are saved)
parent_index = -1;
uses_physics = false;

#event create
generation_duration = 2; // minimum is 2
forest_tile_chance = 0;
forest_tree_chance = 0;
forest_tree_height_condition = 6;
forest_tileset = tP2Forest;
leaf_part_type = -1;
other_solids_tilemap_depth = 999999;
finished_callback = -1;

finished = false;
tilemap_number_per_frame = 0;
world_tilemap_area_index = 0;
world_tilemap_area_x = 0;
world_tilemap_area_y = 0;
world_tilemap_area_w = 0;
world_tilemap_area_h = 0;
world_tilemap_area_number = 0;
world = instance_find(oP2World, 0);

#event alarm0
var
_world = instance_find(oP2World, 0),
_part;

switch (leaf_part_type) {
    case 1: _part = _world.forest_leaf_part_yellow; break;
    case 2: _part = _world.forest_leaf_part_white; break;
    default: _part = _world.forest_leaf_part; break;
}

with (_world) {
    var
    _other_solid_tiles = tile_get_ids_at_depth(other.other_solids_tilemap_depth),
    _other_x, _other_y, _t;
    for (var i = array_length_1d(_other_solid_tiles) - 1; i >= 0; i--) {
        _t = _other_solid_tiles[i];
        if (tile_exists(_t)) {
            _other_x = tile_get_x(_t) - view_xview[0] + view_wview[0];
            _other_y = tile_get_y(_t) - view_yview[0] + view_hview[0];
            scrP2WorldInternalCreateForestTile(_other_x, _other_y, tile_get_left(_t), tile_get_top(_t), tile_get_background(_t));
            scrP2WorldInternalCreateForestInstance(_other_x, _other_y, objBlock);
        }
    }
    
    var _monolith = instance_find(objP2Monolith, 0);
    if (_monolith) {
        scrP2WorldInternalCreateForestInstance(
            _monolith.x - view_xview[0] + view_wview[0],
            _monolith.y - view_yview[0] + view_hview[0],
            objP2Monolith);
    }
    
    with (objPlayerKiller) {
        repeat(4) {
            part_particles_create(
                _world.forest_leaf_sys,
                random_range(bbox_left, bbox_right) - view_xview[0] + view_wview[0],
                random_range(bbox_top, bbox_bottom) - view_yview[0] + view_wview[0],
                _part,
                1);
        }
    }
}

finished = true;
alarm[0] = -1;

if (script_exists(finished_callback)) {
    script_execute(finished_callback);
}

#event step
var
_index_next = min(world_tilemap_area_index + tilemap_number_per_frame, world_tilemap_area_number),
_world_tilemap_width = ds_grid_width(global.__p2_tilemap),
_world_tilemap_height = ds_grid_height(global.__p2_tilemap),
_wx, _wy, _x, _y, _forest_x, _forest_y, _td, _tt;
for (var i = world_tilemap_area_index; i < _index_next; i++) {
    _x = (i % world_tilemap_area_w);
    _y = floor(i / world_tilemap_area_w);
    _wx = _x + world_tilemap_area_x;
    _wy = _y + world_tilemap_area_y;
    _forest_x = _x * global.__p2_tile_size;
    _forest_y = _y * global.__p2_tile_size;
    
    if (!point_in_rectangle(_wx, _wy, 0, 0, _world_tilemap_width, _world_tilemap_height)) {
        continue;
    }
    
    _td = scrP2TilemapGet(_wx, _wy);
    if (_td && !_td[?"corruption"]) {
        _tt = floor(_td[?"tile_index"] / 4) * global.__p2_tile_size;
        with (world) {
            if (_tt == 32) {
                scrP2WorldInternalCreateForestInstance(_forest_x, _forest_y, objP2LeafBlock);
            } else {
                if (random(1) <= other.forest_tile_chance) {
                    scrP2WorldInternalCreateForestTile(_forest_x, _forest_y, 0, _tt, other.forest_tileset);
                } else {
                    scrP2WorldInternalCreateForestTile(_forest_x, _forest_y, 0, _tt, tPenis2Tileset);
                }
                scrP2WorldInternalCreateForestInstance(_forest_x, _forest_y, objBlock);
            }
        }
        
        if (_tt != 32 && random(1) < forest_tree_chance) {
            if (scrP2TreeFits(_wx, _wy, -1, forest_tree_height_condition, global.__p2_tilemap)) {
                var _tree = world.forest_trees[|irandom(ds_list_size(world.forest_trees) - 1)];
                scrP2WorldCreateForestTree(
                    _forest_x,
                    _forest_y,
                    _tree[?"structure"],
                    _tree[?"xorigin"],
                    _tree[?"yorigin"],
                    random(1) < 0.5,
                    false,
                    forest_tileset);
            }/* else if (scrP2TreeFits(_wx, _wy, 1, forest_tree_height_condition, global.__p2_tilemap)) {
                scrP2WorldCreateForestTree(
                    _forest_x,
                    _forest_y,
                    _tree[?"structure"],
                    _tree[?"xorigin"],
                    _tree[?"yorigin"],
                    random(1) < 0.5,
                    true);
                utree_count++;
            }*/
        }
    }
}

world_tilemap_area_index = _index_next - 1;

if (alarm[0] == -1 && !finished && world_tilemap_area_index == (world_tilemap_area_number - 1)) {
    alarm[0] = 1;
}

#event other_user0 init
scrP2WorldClearForestInstances();
scrP2WorldClearForestTiles();

generation_duration = max(generation_duration, 2);
world_tilemap_area_x = (global.__p2_current_room_x + floor(view_xview[0] / view_wview[0]) - 1) * 25;
world_tilemap_area_y = (global.__p2_current_room_y + floor(view_yview[0] / view_hview[0]) - 1) * 19;
world_tilemap_area_w = 3 * 25;
world_tilemap_area_h = 3 * 19;
world_tilemap_area_number = world_tilemap_area_w * world_tilemap_area_h;
tilemap_number_per_frame = ceil(world_tilemap_area_w * world_tilemap_area_h / max(generation_duration - 1, 1));