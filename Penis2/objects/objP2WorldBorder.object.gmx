<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTriggerMask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
event_inherited();

color_change = 0.25;
value_clip = 0.0;
reach = 0.0;
backbuffer = -1;
transitioning = false;
time = 0;

thickness = 12.0;
edge_offset = 38.0;

sh = shP2WorldBorder;

// Destroy if world border glasses havent been collected yet
if (!global.p2Item[P2_ITEM.WORLD_BORDER_DETECTOR])
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
time += (1/50);

var
_player = instance_find(objPlayer, 0),
_lower_border = edge_offset - thickness,
_upper_border = view_xview[0] + view_wview[0] - edge_offset - thickness;
if (_player &amp;&amp;
    !transitioning &amp;&amp;
    ((_player.y &gt; _upper_border &amp;&amp; _player.y &lt;= _upper_border + thickness * 2.0) ||
    (_player.y &gt; _lower_border &amp;&amp; _player.y &lt;= _lower_border + thickness * 2.0)))
{
    transitioning = true;
    
    var _p = instance_create(_player.x, _player.y, objP2WorldBorderTransitionPlayer);
    _p.speed = _player.speed;
    _p.direction = _player.direction;
    _p.sprite_index = _player.sprite_index;
    _p.friction = 0.6;
    instance_destroy(_player);
    
    audio_play_sound(sndP2WorldBorderSplash, 0, false);
    audio_play_sound(sndP2WorldBorderTransition, 0, false);
    //audio_stop_sound(bgm_get_music_id());
    
    TweenFire(id, EaseInOutQuad, 0, true, 0.0, 1.5, "reach", reach, 250.0);
    TweenFire(id, EaseInOutQuad, 0, true, 0.0, 1.5, "color_change", color_change, 0.5);
    var _t = TweenFire(id, EaseInOutQuad, 0, true, 1.0, 2.5, "value_clip", value_clip, 1.2);
    TweenAddCallbackUser(_t, TWEEN_EV_FINISH, id, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_set_width(id, view_wview[0]);
instance_set_height(id, view_hview[0]);
x = view_xview[0];
y = view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(backbuffer))
{
    backbuffer = surface_create(800, 608);
}

surface_copy(backbuffer, x, y, application_surface);
shader_set(sh);
shader_set_uniform_f(shader_get_uniform(sh, "time"), time);
shader_set_uniform_f(shader_get_uniform(sh, "resolution"), 800, 608);
shader_set_uniform_f(shader_get_uniform(sh, "reach"), reach);
shader_set_uniform_f(shader_get_uniform(sh, "value_clip"), value_clip);
shader_set_uniform_f(shader_get_uniform(sh, "color_change"), color_change);
//texture_set_stage(shader_get_sampler_index(sh, "backbuffer"), surface_get_texture(backbuffer));
draw_surface(backbuffer, x, y);
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
