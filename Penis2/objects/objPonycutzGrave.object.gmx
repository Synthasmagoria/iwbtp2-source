<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sP2PonycutzGravestone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 1000000;

music_list = array_create(25);
music_list[0] = musP2Ponycutz25;
music_list[1] = musP2Ponycutz01;
music_list[2] = musP2Ponycutz02;
music_list[3] = musP2Ponycutz03;
music_list[4] = musP2Ponycutz04;
music_list[5] = musP2Ponycutz05;
music_list[6] = musP2Ponycutz06;
music_list[7] = musP2Ponycutz07;
music_list[8] = musP2Ponycutz08;
music_list[9] = musP2Ponycutz09;
music_list[10] = musP2Ponycutz10;
music_list[11] = musP2Ponycutz11;
music_list[12] = musP2Ponycutz12;
music_list[13] = musP2Ponycutz13;
music_list[14] = musP2Ponycutz14;
music_list[15] = musP2Ponycutz15;
music_list[16] = musP2Ponycutz16;
music_list[17] = musP2Ponycutz17;
music_list[18] = musP2Ponycutz18;
music_list[19] = musP2Ponycutz19;
music_list[20] = musP2Ponycutz20;
music_list[21] = musP2Ponycutz21;
music_list[22] = musP2Ponycutz22;
music_list[23] = musP2Ponycutz23;
music_list[24] = musP2Ponycutz24;

music_inst = noone;
music_inst_volume = 1.0;
music_length = -1.0;
music_index = -1.0;

transition_point = 4.0;
transitioning = false;
transition_length = 5.0;

radio_sound = musP2RussianRadio;
radio_sound_inst = noone;
radio_sound_volume = 0.0;

world_music_original_gain = 0.0;

volume = 0.0;
playing = false;
radius = 32;
drop_off_radius = 24;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (audio_is_playing(global.currentMusic)) {
    audio_sound_gain(global.currentMusic, world_music_original_gain, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _dist = radius + drop_off_radius;

with (objPlayer)
{
    _dist = point_distance(x, y, instance_get_middle_x(other.id), instance_get_middle_y(other.id));
}

volume = 1.0 - clamp((_dist - radius) / drop_off_radius, 0.0, 1.0);

with (oP2Background)
{
    monochrome = other.volume;
}

if (volume == 0.0 &amp;&amp; playing)
{
    event_user(1); // stop music
    
    if (audio_is_playing(radio_sound_inst))
        audio_stop_sound(radio_sound_inst);
    radio_sound_inst = noone;
    
    with (objPonycutzText)
    {
        active = false;
        event_user(1); // set active state
    }
}
else if (volume &gt; 0.0 &amp;&amp; !playing)
{
    event_user(2); // play next song
    
    with (objPonycutzText)
    {
        active = true;
        event_user(1); // set active state
    }
}

if (playing)
{
    var _remaining_music = music_length - audio_sound_get_track_position(music_inst);
    if (!transitioning &amp;&amp; _remaining_music &lt;= transition_point)
    {
        event_user(0); // transition
    }
    
    if (audio_is_playing(radio_sound_inst))
        audio_sound_gain(radio_sound_inst, radio_sound_volume * volume, 0);
    if (audio_is_playing(music_inst))
        audio_sound_gain(music_inst, music_inst_volume * volume, 0);
    audio_sound_gain(global.currentMusic, 1.0 - volume, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>transitioning = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(2);
TweenFire(id, EaseLinear, TWEEN_MODE_ONCE, true, 0.0, transition_length / 2.0, "music_inst_volume", 0.0, 1.0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// play next song
event_user(1);
music_index = (music_index + 1) % array_length_1d(music_list);
music_inst = audio_play_sound(music_list[music_index], 0, false);
music_length = audio_sound_length(music_list[music_index]);
playing = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// stop music
playing = false;
if (audio_is_playing(music_inst))
    audio_stop_sound(music_inst);
music_inst = noone;
music_length = -1.0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// transition
transitioning = true;
radio_sound_inst = audio_play_sound(radio_sound, 0, false);

var _t;
_t = TweenFire(id, EaseLinear, TWEEN_MODE_ONCE, true, 0.0, transition_length / 2.0, "music_inst_volume", 1.0, 0.0);
TweenAddCallbackUser(_t, TWEEN_EV_FINISH, id, 3);

var _radio_gain_duration = transition_length / 2.0 - 1.0 / 2.0;
_t = TweenFire(id, EaseLinear, TWEEN_MODE_ONCE, true, 0.0, _radio_gain_duration, "radio_sound_volume", 0.0, 1.0);
_t = TweenMore(_t, id, EaseLinear, TWEEN_MODE_ONCE, true, 1.0, _radio_gain_duration, "radio_sound_volume", 1.0, 0.0);
TweenAddCallbackUser(_t, TWEEN_EV_FINISH, id, 4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>music_index = irandom(array_length_1d(music_list) - 1);
array_randomize(music_list);

world_music_original_gain = audio_sound_get_gain(global.currentMusic);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
