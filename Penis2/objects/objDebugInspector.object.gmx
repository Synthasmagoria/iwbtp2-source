<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>objDebugList</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

enum __INSPECTOR_TYPES {
    REAL, STRING, ARRAY
}

target = noone;
box_padding = 4;

variable_values = -1;
variable_types = -1;
variable_names = -1;
variable_strings = -1;
variable_strings_rendered = -1;
variable_number = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>variable_names = variable_instance_get_names(target);
variable_number = array_length_1d(variable_names);
variable_types = array_create(variable_number);
variable_values = array_create(variable_number);
variable_strings = array_create(variable_number);

var _val;
for (var i = 0; i &lt; variable_number; i++) {
    _val = variable_instance_get(target, variable_names[i]);
    variable_values[i] = _val;
    if (is_real(_val)) {
        variable_strings[i] = string(_val);
        variable_types[i] = __INSPECTOR_TYPES.REAL;
    } else if (is_string(_val)) {
        variable_strings[i] = _val;
        variable_types[i] = __INSPECTOR_TYPES.STRING;
    } else if (is_array(_val)) {
        var _buf_str = buffer_create(512, buffer_grow, 1);
        buffer_write(_buf_str, buffer_text, "[");
        for (var i = 0, n = array_length_1d(_val); i &lt; n; i++) {
            buffer_write(_buf_str, buffer_text, string(_val[i]) + ", ");
        }
        buffer_write(_buf_str, buffer_text, "]");
        buffer_seek(_buf_str, buffer_seek_start, 0);
        variable_strings[i] = buffer_read(_buf_str, buffer_text);
        buffer_delete(_buf_str);
        variable_types[i] = __INSPECTOR_TYPES.ARRAY;
    }
    
    variable_strings_rendered[i] = variable_names[i] + ": " + variable_strings[i];
}

header = object_get_name(target.object_index) + " inst_" + string(target.id);
items = variable_strings_rendered;

event_inherited();

x = target.bbox_right + box_padding - view_xview[0];
if (x + width &gt;= view_wview[0])
    x = target.bbox_left - width - box_padding - view_xview[0];
y = target.bbox_bottom + box_padding - view_yview[0];
y -= max(0, (y + height) - (view_hview[0] - box_padding));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(target)) {
    draw_set_color(c_black);
    draw_line(x, y - 1, target.x - view_xview[0], target.y - view_yview[0] - 1);
    draw_line(x, y + 1, target.x - view_xview[0], target.y - view_yview[0] + 1);
    draw_set_color(c_white);
    draw_line(x, y, target.x - view_xview[0], target.y - view_yview[0]);
}

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
