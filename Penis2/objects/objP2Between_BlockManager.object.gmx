<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time = 0;
interval = 4;
blocks = ds_list_create();
miniblocks = ds_list_create();
toggle_chance = 0.5;
paralax = 0.5;
miniparalax = 0.75;

block_float_value = -1;
TweenFire(id, EaseInSine, TWEEN_MODE_PATROL, true, 0, 1, "block_float_value", -1, 1);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(blocks);
ds_list_destroy(miniblocks);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _block;

time++;
if ((time % interval) == 0) {
    if (random(1) &lt; other.toggle_chance) {
        _block = blocks[|irandom(ds_list_size(blocks) - 1)];
        if (_block.sprite_index == sprP2Between_Block)
            _block.sprite_index = choose(sprP2Between_Block01, sprP2Between_Block02, sprP2Between_Block03);
        else
            _block.sprite_index = sprP2Between_Block;
        _block.image_index = irandom(sprite_get_number(_block.sprite_index) - 1);
    }
    if (random(1) &lt; other.toggle_chance) {
        _block = miniblocks[|irandom(ds_list_size(miniblocks) - 1)];
        if (_block.sprite_index == sprP2Between_MiniBlock)
            _block.sprite_index = choose(sprP2Between_MiniBlock01, sprP2Between_MiniBlock02, sprP2Between_MiniBlock03);
        else
            _block.sprite_index = sprP2Between_MiniBlock;
        _block.image_index = irandom(sprite_get_number(_block.sprite_index) - 1);
    }
}

for (var i = 0, n = ds_list_size(blocks); i &lt; n; i++) {
    _block = blocks[|i];
    _block.y = _block.ystart + block_float_value * 8;
    _block.x = _block.xstart + view_xview[0] * paralax;
}

for (var i = 0, n = ds_list_size(miniblocks); i &lt; n; i++) {
    _block = miniblocks[|i];
    _block.y = _block.ystart + block_float_value * 4;
    _block.x = _block.xstart + view_xview[0] * miniparalax;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objP2Between_Block) {
    if (random(1) &lt; other.toggle_chance) {
        sprite_index = choose(sprP2Between_Block01, sprP2Between_Block02, sprP2Between_Block03);
        image_index = irandom(sprite_get_number(sprite_index) - 1);
    }
    ds_list_add(other.blocks, id);
}

with (objP2Between_MiniBlock) {
    if (random(1) &lt; other.toggle_chance) {
        sprite_index = choose(sprP2Between_MiniBlock01, sprP2Between_MiniBlock02, sprP2Between_MiniBlock03);
        image_index = irandom(sprite_get_number(sprite_index) - 1);
    }
    ds_list_add(other.miniblocks, id);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
