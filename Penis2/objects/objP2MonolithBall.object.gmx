<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprP2BlankCentered</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sh = shP2Ball;
crystal_index = 0;
time = 0;
hollow_factor = 0;
dead = false; // whether the ball has been activated once before

hue = -1;
saturation = -1;
value = -1;

orb_snd = noone;

instance_set_height(id, 32);
instance_set_width(id, 32);

xscale_add = 0;
yscale_add = 0;
scale_add = 0;
scale_effect = 0;
xscale_wobble_tween = -1;
yscale_wobble_tween = -1;

particle_timer = 0;
particle_active = false;
particle_rate = (1/50) / 6.0;
particle_hue = -1;

effect_done_callback_user_event = 0;
effect_done_callback_instance = noone;

smoke_sys = part_system_create();

smoke_part = part_type_create();
part_type_shape(smoke_part, pt_shape_cloud);
part_type_alpha3(smoke_part, 0.5, 0.5, 0);
part_type_life(smoke_part, 50, 80);
part_type_size(smoke_part, 0.6, 1.2, 0.001, 0);
part_type_speed(smoke_part, 6, 8.5, 0, 0);
part_type_direction(smoke_part, 0, 360, -1.74, 0);
part_type_orientation(smoke_part, 286.75, 325.13, 1.37, 0, false);
part_type_blend(smoke_part, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(smoke_sys);
part_type_destroy(smoke_part);

if (audio_is_playing(orb_snd))
    audio_stop_sound(orb_snd);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend = make_color_hsv(hue, saturation, value);
image_xscale = 1 + (xscale_add + scale_add) * scale_effect;
image_yscale = 1 + (yscale_add + scale_add) * scale_effect;

if (!particle_active) {
    exit;
}

var _pcol = make_color_hsv(particle_hue, color_get_saturation(image_blend), color_get_value(image_blend));

part_type_color1(smoke_part, _pcol);

particle_timer += 1/50;
while (particle_timer &gt;= particle_rate) {
    particle_timer -= particle_rate;
    part_particles_create(smoke_sys, x, y, smoke_part, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dead)
    event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init
part_system_depth(smoke_sys, depth + 1);

switch(crystal_index) {
    case P2_CRYSTAL.PURPLE: image_blend = c_purple; break;
    case P2_CRYSTAL.RED: image_blend = c_yellow; break;
    case P2_CRYSTAL.BLUE: image_blend = c_blue; break;
}

particle_hue = hue - (255/10) * 2;
hue = color_get_hue(image_blend);
saturation = color_get_saturation(image_blend);
value = color_get_value(image_blend);

dead = int_get_bit(global.p2Crystal, crystal_index);
if (dead) {
    saturation = 0.0;
    hollow_factor = 3.0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// end effect + callback
TweenDestroySafe(xscale_wobble_tween);
TweenDestroySafe(yscale_wobble_tween);
particle_active = false;

with (effect_done_callback_instance)
    event_user(other.effect_done_callback_user_event);

var _all_crystals = true;
for (var i = 0; i &lt; P2_CRYSTAL.__NUMBER; i++) {
    _all_crystals &amp;= int_get_bit(global.p2Crystal, i);
}

if (!_all_crystals) {
    with (objPlayer) frozen = false;
} else {
    scrP2WorldDelayedExecution(7.0, scrP2MonolithBallEvent_CreateForrester);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// halt particles
var _dur = 2.0;
var _t = TweenFire(id, EaseLinear, 0, true, 0.0, _dur, "scale_effect", 1.0, 0.0);
TweenAddCallbackUser(_t, TWEEN_EV_FINISH, id, 2);
TweenFire(id, EaseLinear, 0, true, 0.0, _dur, "particle_rate", particle_rate, (1/50));
TweenFire(id, EaseLinear, 0, true, 0.0, _dur, "saturation", saturation, 0.0);
TweenFire(id, EaseLinear, 0, true, 0.0, _dur, "image_alpha", image_alpha, 0.4); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// start effect
global.p2Crystal = int_truth_bit(global.p2Crystal, crystal_index);
dead = true;
particle_active = !particle_active;
var _t, _dur = 4.0;
TweenFire(id, EaseLinear, 0, true, 0.0, _dur, "particle_hue", particle_hue, hue);
xscale_wobble_tween = TweenFire(id, EaseInOutSine, TWEEN_MODE_PATROL, true, 0.0, 0.5, "xscale_add", 0, 2);
yscale_wobble_tween = TweenFire(id, EaseInOutSine, TWEEN_MODE_PATROL, true, 0.0, 0.5, "yscale_add", 0, 2);
TweenStep(yscale_wobble_tween, 50 / 4);
TweenFire(id, EaseLinear, TWEEN_MODE_ONCE, true, 0.0, 1.0, "scale_effect", 0.0, 1.0);
TweenFire(id, EaseLinear, TWEEN_MODE_ONCE, true, 0.0, _dur, "scale_add", 0.0, 1.0);
_t = TweenFire(id, EaseLinear, 0, true, 0.0, _dur, "hollow_factor", hollow_factor, 3.0);
TweenAddCallbackUser(_t, TWEEN_EV_FINISH, id, 1);
orb_snd = audio_play_sound(sndP2OrbWind, 0, false);
with (objPlayer) frozen = true;

if (int_get_bit(global.p2Crystal, P2_CRYSTAL.PURPLE) &amp;&amp;
    int_get_bit(global.p2Crystal, P2_CRYSTAL.RED) &amp;&amp;
    int_get_bit(global.p2Crystal, P2_CRYSTAL.BLUE)) {
        global.gameStarted = false;
        
        var _forest_generator = instance_create(0, 0, objP2ForestGenerator);
        _forest_generator.other_solids_tilemap_depth = 999999;
        _forest_generator.forest_tile_chance = 1.0;
        _forest_generator.forest_tree_chance = 0.15;
        _forest_generator.generation_duration = 60;
        _forest_generator.forest_tileset = tP2Forest;
        var _world = instance_find(oP2World, 0);
        _forest_generator.leaf_particle = _world.forest_leaf_part;
        with (_forest_generator)
            event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time += (1/50);

shader_set(sh);
shader_set_uniform_f(shader_get_uniform(sh, "time"), time);
shader_set_uniform_f(shader_get_uniform(sh, "hollow_factor"), hollow_factor);
shader_set_uniform_f(shader_get_uniform(sh, "center"), x, y);
shader_set_uniform_f(shader_get_uniform(sh, "image_scale"), image_xscale, image_yscale);

draw_set_blend_mode(bm_add);
draw_self();
draw_set_blend_mode(bm_normal);

shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
