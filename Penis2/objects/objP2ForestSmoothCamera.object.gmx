<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCamera</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>follow_factor = 0;
xorigin = 0;
yorigin = 0;
smoothing = 4;
view_x = 0;
view_y = 0;

view_enabled = true;
view_visible[0] = true;
view_xport[0] = 0;
view_yport[0] = 0;
view_wport[0] = 800;
view_hport[0] = 608;
view_wview[0] = 800;
view_hview[0] = 608;

with (objPlayer) {
    view_xview[0] = floor(x / view_wview[0]) * view_wview[0];
    view_yview[0] = floor(y / view_hview[0]) * view_hview[0];
    other.x = x;
    other.y = y;
    view_x = other.x;
    view_y = other.y;
    break;
}
xorigin = view_xview[0];
yorigin = view_yview[0];

TweenFire(id, EaseInOutExpo, 0, true, 1.0, 8.0, "follow_factor", 0.0, 1.0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objPlayer) {
    other.x += (x - other.x) / other.smoothing;
    other.y += (y - other.y) / other.smoothing;
    other.view_x = lerp(other.xorigin, other.x - view_wview[0] / 2, other.follow_factor);
    other.view_y = lerp(other.yorigin, other.y - view_hview[0] / 2, other.follow_factor);
    view_xview[0] = round(other.view_x);
    view_yview[0] = round(other.view_y);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
