<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>margin = 4;
font = fP2Silver16;
item_yoffset = -4;
header = "";
header_margin = 4;
selection_callback_instance = noone;
selection_callback_user_event = -1;

height = -1;
width = -1;
items = -1;
item_number = -1;
item_height = -1;
item_highlight_index = -1;
character_height = -1;
character_width = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _item_ystart = y + item_height + header_margin;
var _mx = mouse_x - view_xview[0], _my = mouse_y - view_yview[0];
if (point_in_rectangle(_mx, _my, x, _item_ystart, x + width, y + height)) {
    item_highlight_index = clamp(floor((mouse_y - _item_ystart) / item_height), 0, item_number - 1);
} else {
    item_highlight_index = -1;
}

if (mouse_check_button_pressed(mb_left)) {
    if (point_in_rectangle(_mx, _my, x, y, x + width, y + height)) {
        if (item_highlight_index != -1 &amp;&amp; instance_exists(selection_callback_instance) &amp;&amp; selection_callback_user_event &gt; -1) {
            with (selection_callback_instance) {
                event_user(other.selection_callback_user_event);
            }
        }
    } else {
        instance_destroy();
    }
}

if (mouse_check_button_pressed(mb_right)) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font);
character_width = string_width("A");
character_height = string_height("A");

item_height = character_height + item_yoffset;
var _longest_string = string_length(header);
item_number = array_length_1d(items);
for (var i = 0; i &lt; item_number; i++) {
    _longest_string = max(_longest_string, string_length(items[i]));
}
width = _longest_string * character_width +
    margin * 2;

height = item_height + header_margin +
    item_height * item_number +
    margin * 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_set_alpha(1.0);
draw_rectangle(x, y, x + width, y + height, false);
draw_set_color(c_white);
draw_set_alpha(1.0);
draw_rectangle(x, y, x + width, y + height, true);

draw_set_font(font);
var _dx = x + margin, _dy = y + margin;
draw_text(_dx, _dy, header);
_dy += item_height;
draw_line(_dx, _dy + 1, _dx + width - margin * 2, _dy + 1);
_dy += header_margin;

if (item_highlight_index != -1) {
    draw_set_alpha(0.4);
    draw_rectangle(
        x,
        _dy + item_highlight_index * item_height,
        x + width,
        _dy + (item_highlight_index + 1) * item_height,
        false);
    draw_set_alpha(1.0);
}

for (var i = 0; i &lt; item_number; i++) {
    draw_text(_dx, _dy + item_height * i, items[i]); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
