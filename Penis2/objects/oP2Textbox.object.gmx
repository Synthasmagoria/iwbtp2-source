<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sP2PMDTextboxPurple</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
text = "NOT SET";
text_margin_x = 24;
text_margin_y = 14;
text_speed = 1;
text_lines = 3;
padding_y = 8;
text_width = 324;
element_margin = 8;
manual = true;
font = fP212; // NOTE: monospace required
callback_scripts = ds_list_create();
callback_script_lines = ds_list_create();
sound = sndP2Dialogue;

sound_inst = -1;
text_index = 0;
text_char_index = 0;
text_cut = ds_list_create();
portrait_sprite = -1;
portrait_emotions = -1;
portrait_inst = noone;
options_inst = noone;
t = 0;
t_incr = (1 / room_speed) * 0.03;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
with (oP2Hud) {
    hud_scale_disabled = false;
}

for (var i = 0, n = ds_list_size(callback_script_lines); i &lt; n; i++) {
    if (callback_script_lines[|i] == 9999) {
        script_execute(callback_scripts[|i], id);
    }
}

if (instance_exists(portrait_inst)) {
    instance_destroy(portrait_inst);
}

if (instance_exists(options_inst)) {
    instance_destroy(options_inst);
}

ds_list_destroy(text_cut);
ds_list_destroy(callback_scripts);
ds_list_destroy(callback_script_lines);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
t += t_incr;

var _text_char_index_prev = text_char_index;
text_char_index = min(text_char_index + text_speed[text_index], string_length(text_cut[|text_index]));

if (_text_char_index_prev &lt; floor(text_char_index) &amp;&amp; !audio_is_playing(sound_inst)) {
    sound_inst = audio_play_sound(sound, 0, false);
    audio_sound_pitch(sound_inst, random_range(0.95, 1.05));
}

if (_text_char_index_prev &lt; text_char_index &amp;&amp; text_char_index == string_length(text_cut[|text_index])) {
    event_user(1);
}

if (manual &amp;&amp; scrButtonCheckPressed(global.jumpButton)) {
    scrP2TextboxAdvance(id);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///call current line scripts

for (var i = 0, n = ds_list_size(callback_script_lines); i &lt; n; i++) {
    if (callback_script_lines[|i] == text_index) {
        script_execute(callback_scripts[|i], id);
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init or update

if (!is_array(text)) {
    text = array(text);
}

text_index = 0;
text_char_index = 0;

draw_set_font(font);
ds_list_clear(text_cut);
scrP2StringFormatMono(text, string_width("A"), text_width, text_lines, text_cut);

var cw = view_wview, ch = view_hview;
x = cw / 2 - sprite_width / 2;

var
_player = instance_find(objPlayer, 0),
_bottom = (_player &amp;&amp; _player.y &lt; ch / 2);
if (_bottom) {
    y = ch - padding_y - sprite_height;
} else {
    y = padding_y;
    if (scrP2HudGetScale() == P2_HUD_SCALE.MAXIMIZED) {
        scrP2HudSetScale(P2_HUD_SCALE.NORMAL);
    }
}

with (oP2Hud) {
    hud_scale_disabled = true;
}

if (!is_array(portrait_emotions)) {
    portrait_emotions = array_create_ext(ds_list_size(text_cut), portrait_emotions);
} else {
    portrait_emotions = array_resize(portrait_emotions, ds_list_size(text_cut), P2_EMOTIONS.NEUTRAL);
}

if (!is_array(text_speed)) {
    if (text_speed &gt; 0) {
        text_speed = array_create_ext(ds_list_size(text_cut), text_speed);
    } else {
        text_speed = array_create_ext(ds_list_size(text_cut), 1);
    }
} else {
    text_speed = array_resize(text_speed, ds_list_size(text_cut), 1);
}

if (portrait_sprite != -1) {
    if (!instance_exists(portrait_inst)) {
        portrait_inst = scrP2TextboxCreatePortrait(id, portrait_sprite, portrait_emotions);
    } else {
        portrait_inst.portrait = portrait_sprite;
    }
    portrait_inst.visible = true;
    portrait_inst.emotion = portrait_emotions[0];
} else if (instance_exists(portrait_inst)) {
    instance_destroy(portrait_inst);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_self();
draw_set_font(font);
draw_set_colour(c_white);
draw_set_halign(fa_left);
draw_text_outline(x + text_margin_x, y + text_margin_y, string_copy(text_cut[|text_index], 0, text_char_index), $467F5F, sin(t) * 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///do nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
